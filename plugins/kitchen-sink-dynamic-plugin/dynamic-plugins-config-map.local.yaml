global:
  dynamic:
    plugins:
      - package: oci://quay.io/tkral/backstage-community-plugin-todo:v0.1.1!backstage-community-plugin-todo
        disabled: false
      - package: '@pataknight/backstage-plugin-rhdh-qe-theme@0.5.5'
        disabled: false
        integrity: sha512-srTnFDYn3Ett6z33bX4nL2NQY8wqux8TkpgBQNsE8S73nMfsor/wAdmVgHL+xW7pxQ09DT4YTdaG3GkH+cyyNQ==
        pluginConfig:
          dynamicPlugins:
            frontend:
              pataknight.backstage-plugin-rhdh-qe-theme:
                appIcons:
                - importName: LightIcon
                  name: lightIcon
                - importName: DarkIcon
                  name: darkIcon
                themes:
                - icon: lightIcon
                  id: light-dynamic
                  importName: lightThemeProvider
                  title: Light Dynamic
                  variant: light
                - icon: darkIcon
                  id: dark-dynamic
                  importName: darkThemeProvider
                  title: Dark Dynamic
                  variant: dark
      - package: ./dynamic-plugins/dist/backstage-plugin-techdocs-backend-dynamic
        disabled: false
        pluginConfig:
          # testing
          # Reference documentation http://backstage.io/docs/features/techdocs/configuration
          # Note: After experimenting with basic setup, use CI/CD to generate docs
          # and an external cloud storage when deploying TechDocs for production use-case.
          # https://backstage.io/docs/features/techdocs/how-to-guides#how-to-migrate-from-techdocs-basic-to-recommended-deployment-approach
          techdocs:
            builder: local
            generator:
              runIn: local
            publisher:
              type: local
      - package: ./dynamic-plugins/dist/backstage-plugin-techdocs
        disabled: false
        pluginConfig:
          dynamicPlugins:
            frontend:
              backstage.plugin-techdocs:
                routeBindings:
                  targets:
                    - importName: techdocsPlugin
                  bindings:
                    - bindTarget: catalogPlugin.externalRoutes
                      bindMap:
                        viewTechDoc: techdocsPlugin.routes.docRoot
                    - bindTarget: scaffolderPlugin.externalRoutes
                      bindMap:
                        viewTechDoc: techdocsPlugin.routes.docRoot
                dynamicRoutes:
                  - path: /docs
                    importName: TechDocsIndexPage
                    menuItem:
                      icon: docs
                      text: Docs
                  - path: /docs/:namespace/:kind/:name/*
                    importName: TechDocsReaderPage
                mountPoints:
                  - mountPoint: entity.page.docs/cards
                    importName: EntityTechdocsContent
                    config:
                      layout:
                        gridColumn: '1 / -1'
                      if:
                        allOf:
                          - isTechDocsAvailable
                  - mountPoint: search.page.results
                    importName: TechDocsSearchResultListItem
                  - mountPoint: search.page.filters
                    importName: TechdocsSearchFilter
                  - mountPoint: search.page.types
                    importName: techdocsSearchType
                    config:
                      props:
                        name: Documentation
                        icon: docs
                menuItems:
                  favorites:
                    title: Favorites
                    icon: star
                    priority: 10
                  docs:
                    parent: favorites
                    priority: 1