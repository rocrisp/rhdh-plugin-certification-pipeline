name: RHDH Plugin Certification Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  setup-and-deploy:
    name: Setup and Deploy RHDH on Openshift Cluster
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout Repository
        uses: actions/checkout@v4

      - name: 🌐 Set Up Kubeconfig and Connect to OpenShift
        uses: actions-hub/kubectl@master
        env:
          #cat $HOME/.kube/config | base64
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: cluster-info
      
      - name: 🛠️ Install Helm
        run: |
          sudo apt update
          sudo apt install -y g++
          curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
          sudo apt-get install -y apt-transport-https
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install -y helm
      
      - name: 🌐 Setup Kubeconfig and Verify Connection
        run: |
          mkdir /opt/.kube 
          echo "$KUBESECRET" | base64  -d > /opt/.kube/config
          helm --kubeconfig /opt/.kube/config list
        env:
          KUBESECRET: ${{ secrets.KUBE_CONFIG }}
      
      - name: 📦 Deploy Red Hat Developer Hub and Plugin
        run: |
          pwd; ls; helm repo add openshift-helm-charts https://charts.openshift.io/
          helm --kubeconfig /opt/.kube/config install -f values.yaml \
            redhat-developer-hub openshift-helm-charts/redhat-developer-hub \
            --namespace rhdh-smoketest --create-namespace

  configure-dynamic-plugin:
    name: Configure Dynamic Plugin
    runs-on: ubuntu-latest
    needs: setup-and-deploy
    steps:
      - name: 🛎️ Checkout Repository
        uses: actions/checkout@v4

      - name: 📥 Clone RHDH Repository
        run: git clone https://github.com/rocrisp/rhdh

      - name: 📝 Generate Dynamic Plugin ConfigMap
        run: |
          cat <<EOF > dynamic-plugins-configmap.yaml
          kind: ConfigMap
          apiVersion: v1
          metadata:
            name: rhdh-dynamic-plugins
          data:
            dynamic-plugins.yaml: |
              includes:
                - 'dynamic-plugins.default.yaml'
              plugins:
                - package: oci://quay.io/tkral/backstage-community-plugin-todo:v0.1.1!backstage-community-plugin-todo
                  disabled: false
          EOF

  run-smoke-tests:
    name: Run Smoke Tests
    runs-on: ubuntu-latest
    needs: configure-dynamic-plugin
    steps:
      - name: 🛎️ Checkout Repository
        uses: actions/checkout@v4

      - name: 📥 Clone RHDH Repository
        run: git clone https://github.com/rocrisp/rhdh

      - name: 🚀 Install Node.js (NVM) and Dependencies
        run: |
          pwd
          yarn install

      - name: 🔬 Install Playwright Dependencies
        working-directory: e2e-tests
        run: |
          yarn install
          yarn playwright install chromium

      - name: ✅ Run Playwright Smoke Test
        env:
          BASE_URL: https://redhat-developer-hub-rhdh-todo.apps.dancurran-lab2025.opdev.io/
        run: |
          cd rhdh/e2e-tests
          npx playwright test playwright/e2e/custom-theme.spec.ts

  cleanup:
    name: Cleanup Deployment
    runs-on: ubuntu-latest
    needs: run-smoke-tests
    if: always()  # Ensures cleanup runs even if previous steps fail
    steps:
    #   - name: 🛠️ Set Up Kubeconfig
    #     run: |
    #       mkdir -p /opt/.kube
    #       echo "$KUBESECRET" | base64 -d > /opt/.kube/config
    #     env:
    #       KUBESECRET: ${{ secrets.KUBE_CONFIG }}

    #   - name: 🔍 Get Helm Version
    #     run: |
    #       HELM_VERSION=$(helm version --short)
    #       echo "Helm version: $HELM_VERSION"
    #       echo "HELM_VERSION=$HELM_VERSION" >> $GITHUB_ENV

      - name: 📜 Get Helm Release Name
        run: |
          RELEASE_NAME=$(helm --kubeconfig /opt/.kube/config list -n rhdh-smoketest -q | head -n 1)
          if [ -z "$RELEASE_NAME" ]; then
            echo "No Helm releases found in namespace rhdh-smoketest. Skipping uninstallation."
            exit 0
          fi
          echo "Found Helm release: $RELEASE_NAME"
          echo "RELEASE_NAME=$RELEASE_NAME" >> $GITHUB_ENV

      - name: ❌ Uninstall Helm Release
        run: |
          helm uninstall $RELEASE_NAME --namespace rhdh-smoketest
          echo "✅ Helm release '$RELEASE_NAME' has been uninstalled."
        env:
          RELEASE_NAME: ${{ env.RELEASE_NAME }}
