name: RHDH Plugin Certification Pipeline debug

on:
  push:
    branches:
      - main
#   pull_request:
#     branches:
#       - main
  workflow_dispatch:

jobs:
  detect-changes:
    name: Detect PR Changes
    runs-on: ubuntu-latest
    outputs:
      modified_files: ${{ steps.changed-files.outputs.all_changed_files }}
      plugin_name: ${{ steps.extract-plugin.outputs.plugin_name }}
      package_yaml: ${{ steps.extract-plugin.outputs.package_yaml }}
      smoke_test_file: ${{ steps.extract-plugin.outputs.smoke_test_file }}
    steps:
      - name: 🛎️ Checkout Repository
        uses: actions/checkout@v4

      - name: 🔍 Get Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v41
        with:
            files: plugins/**/*

      - name: 📥 Save Repository as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: repo-artifact
          path: .  # Saves the entire repository

      - name: 📥 Extract Plugin Name and Package.yaml Path
        id: extract-plugin
        run: |
          PLUGIN_NAME=""
          VERSION=""
          PACKAGE_YAML=""
          SMOKE_TEST_FILE=""

          if [[ -z "${{ steps.changed-files.outputs.all_changed_files }}" ]]; then
            echo "No plugin-related changes detected."
            echo "PLUGIN_NAME=" >> $GITHUB_ENV
            echo "VERSION=" >> $GITHUB_ENV
            echo "PACKAGE_YAML=" >> $GITHUB_ENV
            echo "SMOKE_TEST_FILE=" >> $GITHUB_ENV
            exit 0
          fi

          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ "$file" == plugins/*/*/package.yaml ]]; then
                PLUGIN_NAME=$(echo "$file" | cut -d'/' -f2)  # Extract plugin-name
                VERSION=$(echo "$file" | cut -d'/' -f3)  # Extract version
                echo "Plugin name: $PLUGIN_NAME"
                echo "Version: $VERSION"
                echo "PLUGIN_NAME=$PLUGIN_NAME" >> $GITHUB_ENV
                echo "PLUGIN_NAME=$PLUGIN_NAME" >> $GITHUB_OUTPUT
                echo "VERSION=$VERSION" >> $GITHUB_ENV
                echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
                echo "PACKAGE_YAML=$file" >> $GITHUB_ENV
                echo "PACKAGE_YAML=$file" >> $GITHUB_OUTPUT
            fi
            if [[ "$file" == plugins/*/*/smoke-test.ts ]]; then
                SMOKE_TEST_FILE=$file
                echo "Smoke Test File: $SMOKE_TEST_FILE"
                echo "SMOKE_TEST_FILE=$SMOKE_TEST_FILE" >> $GITHUB_ENV
                echo "SMOKE_TEST_FILE=$SMOKE_TEST_FILE" >> $GITHUB_OUTPUT
            fi
          done
       
  setup-and-deploy:
    name: Setup and Deploy - ${{ needs.detect-changes.outputs.plugin_name }}
    runs-on: ubuntu-latest
    needs: detect-changes
    steps:
      - name: 📤 Download Repository Artifact
        uses: actions/download-artifact@v4
        with:
          name: repo-artifact
          path: .

      - name: 🌐 Set Up Kubeconfig and Connect to OpenShift
        uses: actions-hub/kubectl@master
        env:
          #cat $HOME/.kube/config | base64
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: cluster-info
      
      - name: 🛠️ Install Helm
        run: |
          sudo apt update
          sudo apt install -y g++
          curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
          sudo apt-get install -y apt-transport-https
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install -y helm
      
      - name: 🌐 Setup Kubeconfig and Verify Connection
        run: |
          mkdir /opt/.kube 
          echo "$KUBESECRET" | base64  -d > /opt/.kube/config
          helm --kubeconfig /opt/.kube/config list
        env:
          KUBESECRET: ${{ secrets.KUBE_CONFIG }}
      
      - name: 📦 Deploy Red Hat Developer Hub and Plugin
        run: |
          helm repo add openshift-helm-charts https://charts.openshift.io/
          helm --kubeconfig /opt/.kube/config install -f values.yaml \
            redhat-developer-hub openshift-helm-charts/redhat-developer-hub \
            --namespace rhdh-smoketest --create-namespace
     
      - name: Upgrade Helm Release to include Plugin
        run: |
          helm --kubeconfig /opt/.kube/config upgrade --reuse-values -f "${{ needs.detect-changes.outputs.package_yaml }}" \
            redhat-developer-hub openshift-helm-charts/redhat-developer-hub \
            --namespace rhdh-smoketest
  
  run-smoke-tests:
    name: Run Smoke Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20]
    needs: 
      - setup-and-deploy
    steps:
      - name: 📥 Clone RHDH Repository
        run: |
          git clone --branch release-1.4 --single-branch https://github.com/redhat-developer/rhdh "$GITHUB_WORKSPACE/rhdh"
          ls -l "$GITHUB_WORKSPACE"

      - name: Veryify Branch
        run: |
          cd "$GITHUB_WORKSPACE/rhdh"
          git branch --show-current

      - name: Setup Node.js
        uses: actions/setup-node@1d0ff469b7ec7b3cb9d8673fde0c81c44821de2a # v4
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'

      - name: 🚀 Install Dependencies
        working-directory: rhdh
        run: |
          pwd
          yarn install

      - name: 🔬 Install Playwright Dependencies
        working-directory: rhdh/e2e-tests
        run: |
          yarn install
          yarn playwright install chromium

      - name: ✅ Run Playwright Smoke Test
        env:
          BASE_URL: https://redhat-developer-hub-rhdh-smoketest.apps.dancurran-lab2025.opdev.io/
        run: |
          cd rhdh/e2e-tests
          echo "env.SMOKE_TEST_FILE: ${{ steps.extract-plugin.outputs.smoke_test_file }}"
          cat ${{ steps.extract-plugin.outputs.smoke_test_file }}
          yarn playwright test --project="showcase-k8s"