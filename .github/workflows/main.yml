name: Certify DH External Dynamic Plugin

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - '*'

jobs:

  setup-oci:
    name: Set up OpenShift CI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to OpenShift Cluster
        env:
          OPENSHIFT_API_URL: ${{ secrets.OPENSHIFT_API_URL }}
          OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
        run: |
          oc login $OPENSHIFT_API_URL --token=$OPENSHIFT_TOKEN

      - name: Install OpenShift CLI
        uses: redhat-actions/oc-installer@v3
        with:
          version: latest

  deploy-dhplugin-openshift:
    name: Deploy RHDH and the external dynamic plugin on OpenShift
    runs-on: ubuntu-latest
    steps:
      - name: Install Helm deps
        run: |
          sudo apt install g++ -y 
          curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | sudo tee /usr/share/keyrings/helm.gpg > /dev/null
          sudo apt-get install apt-transport-https --yes
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install helm

      - name: Setup config and run helm list
        run: mkdir /opt/.kube; echo "$KUBESECRET" | base64  -d > /opt/.kube/config; helm --kubeconfig /opt/.kube/config list
        env:
          KUBESECRET: ${{ secrets.KUBE_CONFIG }}

      - name: Clone GuillaumeFalourd/poc-github-actions PUBLIC repository
        uses: GuillaumeFalourd/clone-github-repo-action@v2.3
        with:
          depth: 1
          branch: 'main'
          owner: 'rocrisp'
          repository: 'dh-plugin-workflow-hackery'
        
      - name: Install Helm Chart
        run: |
          helm install my-release /opt/.github/workflows/rhdh-plugin-certification-pipeline/helm-chart  

  certify-dh-external-dynamic-plugin:
    name: Certify DH External Dynamic Plugin
    needs: setup-oci
    runs-on: ubuntu-latest

    steps:
    - name: Placeholder for Smoke test
      run: |
        echo "Running tests..."
        echo "Test suite execution to validate plugin functionality."

    - name: Placeholder for Certification Tooling
      run: |
        echo "Running certification process..."
        echo "This is a placeholder for future certification tooling."

  cleanup:
    name: Cleanup Resources
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Log in to OpenShift Cluster
        env:
          OPENSHIFT_API_URL: ${{ secrets.OPENSHIFT_API_URL }}
          OPENSHIFT_TOKEN: ${{ secrets.OPENSHIFT_TOKEN }}
        run: |
          oc login $OPENSHIFT_API_URL --token=$OPENSHIFT_TOKEN

      - name: Delete Resources
        run: |
          oc delete all --selector app=dynamic-plugin
          echo "Cleanup complete."
